@using HR_Management.Web.Models
@model LoginViewModel
@{
    ViewBag.Title = "Login";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container main-container headerOffset">

    <div class="row">
        <div class="breadcrumbDiv col-lg-12">
            <ul class="breadcrumb">
                <li><a href="index.html">Home</a></li>
                <li class="active"> Authentication</li>
            </ul>
        </div>
    </div>

    <div class="row">

        <div class="col-lg-9 col-md-9 col-sm-7">
            <h1 class="section-title-inner"><span><i class="fa fa-lock"></i> Authentication</span></h1>

            <div class="row userInfo">

                <div class="col-xs-12 col-sm-6">
                    <h2 class="block-title-2"> Create an account </h2>
                    @using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @class = "regForm", @id = "frm", name = "RegisterForm", role = "form" }))
                    {
                        @Html.AntiForgeryToken()

                        <form role="form" class="regForm">
                            <div class="form-group">
                                <label>Name</label>
                                <input title="Please enter your username (at least 3 characters)" type="text"
                                       class="form-control" placeholder="Enter name" required minlength="3" name = "RegisterName">
                            </div>
                            <div class="form-group">
                                <label>Email address</label>
                                <input title="Please enter valid email" type="email" class="form-control" name = "RegisterEmail"
                                    placeholder="Enter email" required>
                                @*@Html.TextBoxFor(m => m.Email, new { @type = "email", name = "registerEmail", @class = "form-control", @placeholder = "Username" })*@
                            </div>
                            <div class="form-group">
                                <label>Password</label>
                                <input required minlength="5"
                                       type="password" id="RegisterPassword"
                                       class="form-control" placeholder="Password" name = "RegisterPassword">
                            </div>
                            <div class="form-group">
                                <label>Confirm Password</label>
                                <input required minlength="5"
                                        type="password"
                                       class="form-control" placeholder="Password" name="RegisterConfirmPassword">
                            </div>
                            <div class="error">
                            </div>

                            <button type="submit" class="btn btn-primary Register">
                                <i class="fa fa-user"></i> Create an account
                            </button>
                           
                            <div><img src="~/Content/Loader.png" id="regloader" alt="" style="display:none;" /> </div>
                        </form>
                    }
                </div>
                <div class="col-xs-12 col-sm-6">
                    <h2 class="block-title-2"><span>Login</span></h2>
                    @using (Html.BeginForm("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "logForm", role = "form" }))
                    {
                    @Html.AntiForgeryToken()
                    <form role="form" class="logForm ">
                        <div class="form-group">
                            <label>Email address</label>
                            @*<input type="email" class="form-control" placeholder="Enter email">*@
                            @Html.TextBoxFor(m => m.Email, new { @type = "email", @class = "form-control", @placeholder = "Username" })
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            <label>Password</label>
                            @Html.PasswordFor(m => m.Password, new { @class = "form-control", @placeholder = "Password" })
                            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                            @*<input type="password" class="form-control" placeholder="Password">*@
                        </div>
                        <div class="checkbox">
                            <label>
                                <input type="checkbox" name="checkbox">
                                Remember me
                            </label>
                        </div>
                        <div class="form-group">
                            <p>
                                <a title="Recover your forgotten password" href="@Url.Action("ForgotPassword","Account")">
                                    Forgot your
                                    password?
                                </a>
                            </p>
                        </div>
                        <button type="submit" class="btn btn-primary"><i class="fa fa-sign-in"></i>Login</button>
                        @*<a class="btn btn-primary" ><i class="fa fa-sign-in"></i> Sign In</a>*@
                    </form>
                    }
                </div>
            </div>
            <!--/row end-->

        </div>

        <div class="col-lg-3 col-md-3 col-sm-5"></div>
    </div>
    <!--/row-->

    <div style="clear:both"></div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
       
        $(document).ready(function () {
            $("form[name='RegisterForm']").validate({
                // Specify validation rules
                rules: {
                    RegisterName: {
                        required: true                        
                    },
                    RegisterEmail: {
                        required: true,
                        email: true
                    },
                    RegisterPassword: {
                        required: true,
                        minlength: 10,
                        maxlength: 16,
                    },
                    RegisterConfirmPassword: {
                        // equalTo: "#RegisterPassword",
                        required: true,
                        minlength: 10,
                        maxlength: 16
                    }
                },
                // Specify validation error messages
                messages: {
                    RegisterName: "Name is required",
                    RegisterEmail: "Email is required",
                    RegisterPassword: {
                        required: "Password is required"
                    },
                    RegisterConfirmPassword: {
                        required: "Please Confirm Password"
                    },

                },
                
                // Make sure the form is submitted to the destination defined
                // in the "action" attribute of the form when valid
                //submitHandler: function (form) {
                //    form.submit();
                //}
            });
        });


        $(document).ready(function () {
            $(".Register").click(function (e) {
                e.preventDefault();               
            
                $(".Register").attr("class", "btn btn-primary  Register disabled");
                var form = "frm";
                var token = $('input[name="__RequestVerificationToken"]').val();
                var headers = {};
                headers['__RequestVerificationToken'] = token;
                if ($("#" + form).valid()) {
                    $('#regloader').show();

                    $.ajax({
                        url: $("#" + form).attr("action"),
                        type: $("#" + form).attr("method"),
                        data: $("#" + form).serialize(),
                        dataType: "json",
                        headers: headers,
                        success: function (data) {
                            if (data != null) {
                                if (data.objResponse.IsSuccess == "true") {
                                    window.location.href = "/Account/CheckYourEmail?Email=" + data.email;
                                    // $('#welcomemsg').html("Welcome " + data.objResponse.StrResponse);
                                   // $("#popupError").html(data.objResponse.StrResponse);
                                    //$("#myModal").modal('hide');
                                    //CompDetail();
                                   // showNotification("Successfully Updated", "success");
                                }
                                else {
                                    // $("#popupError").html(data.objResponse.StrResponse);
                                    showNotification(data.objResponse.StrResponse, "success");
                                }
                            }
                            $('#regloader').hide();
                            $(".Register").attr("class", "btn btn-primary Register");
                        },
                        error: function (ts) {
                            alert(ts.responseText);
                            $('#regloader').hide();
                            $(".Register").attr("class", "btn btn-primary Register");
                        }
                    });
                }
                else {
                    //alert('error');
                }
            });
        });
    </script>
}


