@model IEnumerable<HR_Management.Web.ViewModels.EmployeeAttendenceViewModel>

<link href="~/Content/myCustom.css" rel="stylesheet" />

<script type="text/javascript">
    $(document).ready(function () {
        $(function () {
            $('#datetimepicker1').datetimepicker();
        });

        $('.save-record').on('click', function () {
            var command = $(this).val();
            var AttendenceId = $('#Id').val();
            var date = $('#Date').val();

          
            var tr = $(this).closest('tr');
            var empid = tr.find('.employeeid');
            var empval = tr.find('.employeename');
            var inTime = tr.find('.inTime');
            var outTime = tr.find('.outTime');
            var attendenceType = tr.find('.AbsentPresent');
            var empidval = empid.val();
            var attendenceTypeVal = attendenceType.val()
            var employeeName = empval.val()
            var inTimeVal = inTime.val()
            var outTimeVal = outTime.val()
            //alert(inTimeVal);
            //if (!isNaN(inTimeVal)) {
            //    alert("Please Enter In Time")
            //    $('#MessageToClient').text('Please Enter In Time');
            //    return false;
            //}
            
            //  var cid = $(this).attr('id');           

            if (employeeName != null)
                $.ajax({
                    url: "/EmployeeAttendences/Save",
                    // data: { __RequestVerificationToken: token},
                    data: {
                        employeeName: employeeName, inTimeVal: inTimeVal, outTimeVal: outTimeVal, AttendenceId: AttendenceId, attendenceTypeVal: attendenceTypeVal, date: date, empidval: empidval, command: command
                    },
                    type: 'POST',
                    //  contentType: "application/json",
                    success: function (data) {
                        if (data.success) {
                            location.reload();
                        } else {
                            $("#MessageToClient").text("The data was not updated.");
                        }
                        //if (data != null) {
                        //    if (data.objResponse.IsSuccess == "false") {
                        //        $("#popupError").html(data.objResponse.StrResponse);
                        //    }
                        //    else {
                        //        $("#popupError").html("");
                        //        $("#popupError").html(data.objResponse.StrResponse);
                        //    }
                        //}
                        //$(".ajax-loading-block-window").hide();
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        if (XMLHttpRequest.status == 400) {
                            $('#MessageToClient').text(XMLHttpRequest.responseText);
                        }
                        else {
                            $('#MessageToClient').text('The web server had an error.');
                        }
                    }
                });
        });
        $('.edit-record').on('click', function () {

            var AttendenceId = $('#Id').val();
            var command = $(this).val();
            var date = $('#Date').val();
            //var ModuleMode = [];
            var tr = $(this).closest('tr');
            var empval = tr.find('.employeename');
            var empid = tr.find('.employeeid');
            var empidval = empid.val();
            var inTime = tr.find('.inTime');
            var outTime = tr.find('.outTime');
            var attendenceType = tr.find('.AbsentPresent');

            var attendenceTypeVal = attendenceType.val()
            var employeeName = empval.val()
            var inTimeVal = inTime.val()
            var outTimeVal = outTime.val()

            //if (!isNaN(inTimeVal)) {
            //    alert("Please Enter In Time")
            //    $('#MessageToClient').text('Please Enter In Time');
            //    return false;
            //}


            var attendenceDate = $('.attendenceDate').val();

            //  var cid = $(this).attr('id');

            //$('.tBody tr').each(function () {
            //    var tr = $(this).closest('tr');
            //    var empval = tr.find('.employeename');
            //    alert(empval.val());
            //    //ModuleMode.push({ UserId: UserId, ModuleId: hidmoduleid });
            //})

            if (employeeName != null)
                $.ajax({
                    url: "/EmployeeAttendences/Save",
                    // data: { __RequestVerificationToken: token},
                    data: {
                        employeeName: employeeName, inTimeVal: inTimeVal, outTimeVal: outTimeVal, AttendenceId: AttendenceId, attendenceTypeVal: attendenceTypeVal, date: date, empidval: empidval, command: command
                    },
                    type: 'POST',
                    //  contentType: "application/json",
                    success: function (data) {
                        if (data.success) {
                            location.reload();
                        } else {
                            $("#MessageToClient").text("The data was not updated.");
                        }
                        //if (data != null) {
                        //    if (data.objResponse.IsSuccess == "false") {
                        //        $("#popupError").html(data.objResponse.StrResponse);
                        //    }
                        //    else {
                        //        $("#popupError").html("");
                        //        $("#popupError").html(data.objResponse.StrResponse);
                        //    }
                        //}
                        //$(".ajax-loading-block-window").hide();
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        if (XMLHttpRequest.status == 400) {
                            $('#MessageToClient').text(XMLHttpRequest.responseText);
                        }
                        else {
                            $('#MessageToClient').text('The web server had an error.');
                        }
                    }
                });
        });
    })
</script>

<table class="table table-condensed table-hover table-bordered table-striped ">
    <thead>
        <tr>
            <th class="col-md-1">Employee Name</th>
            <th class="col-md-1">Present/Absent</th>
            <th class="col-md-4">In-Out Time</th>
            <th class="col-md-4">Total = Work Hours + OverTime</th>
            <th class="col-md-1">Leave Type</th>
            <th class="col-md-1"></th>


            @*<th class="">Employee Name</th>
                <th class="">Present/Absent</th>
                <th class="">In-Out Time</th>
                <th class="">Work Hours</th>
                <th class="">Leave Type</th>
                <th class=""></th>*@
        </tr>
    </thead>
    @foreach (var item in Model)
    {
        @Html.HiddenFor(m => item.AttendenceId)
        <tbody class="tBody">
            <tr>
                <td>
                    @Html.HiddenFor(model => item.EmployeeId, new { @class = "employeeid" })
                    <div class="form-group-sm">
                        <div class="col-md-1">
                            @Html.EditorFor(model => item.FullName, new { htmlAttributes = new { @class = "form-control employeename", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => item.FullName, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </td>
                <td>
                    <div class="form-group-sm">
                        <select class="form-control AbsentPresent" id="AbsentPresent">
                            @if (item.AttendenceType != null)
                            {
                                <option value="@item.AttendenceType" selected="selected">@item.AttendenceType</option>
                            }
                            else
                            {
                                <option value="Present" selected="selected">Present</option>
                            }
                            <option value="Present">Present</option>
                            <option value="Absent">Absent</option>
                            <option value="1 Star">1 Star</option>
                            <option value="2 Star">2 Star</option>
                            <option value="3 Star">3 Star</option>
                            <option value="4 Star">4 Star</option>
                            <option value="5 Star">5 Star</option>
                        </select>
                    </div>
                </td>
                <td>
                    <div class="form-inline">
                        <div class="col-xs-6">
                            <div class="form-group form-group-sm">
                                <div class='input-group datetimepicker6 date' id='datetimepicker6'>
                                    @Html.EditorFor(model => item.InTime, "InTimeDateWithTimePicker")
                                    <span class="input-group-addon input-sm">
                                        <span class="glyphicon glyphicon-calendar"></span>
                                    </span>
                                </div>
                            </div>
                        </div>
                        <div class="col-xs-6">
                            <div class="form-group form-group-sm">
                                <div class='input-group datetimepicker7 date' id='datetimepicker7'>
                                    @Html.EditorFor(model => item.OutTime, "OutTimeDateWithTimePicker")
                                    <span class="input-group-addon input-sm">
                                        <span class="glyphicon glyphicon-calendar"></span>
                                    </span>
                                </div>
                            </div>
                        </div>
                    </div>
                </td>
                <td>
                    <div class="col-xs-4">
                        <div class="form-group form-group-sm">
                            <div class='input-group'>
                                @Html.EditorFor(model => item.TotalTime, "TotalTime")
                            </div>
                        </div>
                    </div>
                    <div class="col-xs-4">
                        <div class="form-group form-group-sm">
                            <div class='input-group'>
                                @Html.EditorFor(model => item.WorkHours, "WorkHours")
                            </div>
                        </div>
                    </div>
                    <div class="col-xs-4">
                        <div class="form-group form-group-sm">
                            <div class='input-group'>
                                @Html.EditorFor(model => item.OverTimeHours, "WorkHours")
                            </div>
                        </div>
                    </div>
                </td>
                <td>
                    <div class="form-group-sm">
                        <select class="form-control AbsentPresent" id="AbsentPresent">
                            @if (item.AttendenceType != null)
                            {
                                <option value="@item.AttendenceType" selected="selected">@item.AttendenceType</option>
                            }
                            else
                            {
                                <option value="Present" selected="selected">Present</option>
                            }
                            <option value="Present">Present</option>
                            <option value="Absent">Absent</option>
                            <option value="1 Star">1 Star</option>
                            <option value="2 Star">2 Star</option>
                            <option value="3 Star">3 Star</option>
                            <option value="4 Star">4 Star</option>
                            <option value="5 Star">5 Star</option>
                        </select>
                    </div>
                </td>
                <td>
                    @if (item.Status == false)
                    {
                        <div class="form-group-sm">
                            <input type="button" value="Submit" class="form-control btn btn-primary btn-xs save-record">
                        </div>
                    }
                    else
                    {
                        <div class="form-group-sm">
                            <input type="button" value="Edit" class="form-control btn btn-primary btn-xs edit-record">
                        </div>
                    }
                </td>
            </tr>
        </tbody>


    }

    @*<tr>
            <content>
                @foreach (var item in Model)
                {
                    <div class="form-group col-md-12">
                        <div class="form-inline form-inline-sm">
                            @Html.LabelFor(model => item.FullName, htmlAttributes: new { @class = "control-label col-lg-1" })
                            <div class="col-sm-3">
                                @Html.EditorFor(model => item.FullName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => item.FullName, "", new { @class = "text-danger" })
                            </div>
                        </div>


                        <div class="form-inline form-inline-sm ">
                            <label class="control-label col-md-1">In Time</label>
                            <div class="col-md-3 ">
                                <input type='text' class="form-control datetimepicker1" id='datetimepicker1' />
                            </div>
                        </div>


                        <div class="form-inline form-inline-sm">
                            <label class="control-label col-md-1">Out Time</label>
                            <div class="col-md-3">
                                <input type='text' class="form-control datetimepicker2" id='datetimepicker2' />
                            </div>
                        </div>

                    </div>
                }

            </content>
        </tr>*@
</table>

<script src="~/Content/bootstrap-toggle-master/js/bootstrap-toggle.min.js"></script>
<script src="~/Scripts/moment.min.js"></script>
<script src="~/Scripts/bootstrap-datetimepicker.min.js"></script>