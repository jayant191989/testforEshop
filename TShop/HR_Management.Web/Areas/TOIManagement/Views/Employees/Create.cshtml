@model HR_Management.Web.ViewModels.EmployeeViewModel
@{ 
    Layout = "~/Areas/TOIManagement/Views/Shared/_Layout.cshtml";
}

<style>
    .required:after
    {
        content: "*";
        font-weight: bold;
        color: red;
    }
</style>
<div class="box-inner">
    <div class="box-content">
        <h2>Create Employee</h2>
        <hr />
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="col-lg-6">
                    <div class="form-group form-group-sm">
                        @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-4 required" })
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group form-group-sm">
                        @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-4 required" })
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group form-group-sm">
                        @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-6">
                            @Html.DropDownListFor(model => model.Gender, new SelectList(Model.getAllGenderList, "Value", "Text"), "-Select Gender-", htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group form-group-sm">
                        @Html.LabelFor(model => model.FathersName, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.FathersName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.FathersName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group form-group-sm">
                        @Html.LabelFor(model => model.DateOfBirth, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.DateOfBirth, "DateWithPicker")
                            @Html.ValidationMessageFor(model => model.FathersName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group form-group-sm">
                        @Html.LabelFor(model => model.JoinDate, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.JoinDate, "DateWithPicker")
                            @Html.ValidationMessageFor(model => model.JoinDate, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group form-group-sm">
                        @Html.LabelFor(model => model.DepartmentID, htmlAttributes: new { @class = "control-label col-md-4 required" })
                        <div class="col-md-6">
                            @Html.DropDownListFor(model => model.DepartmentID, new SelectList(Model.DepartmentList, "Value", "Text"), new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.DepartmentID, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group form-group-sm">
                        @Html.LabelFor(model => model.BranchId, htmlAttributes: new { @class = "control-label col-md-4 required" })
                        <div class="col-md-6">
                            @Html.DropDownListFor(model => model.BranchId, new SelectList(Model.BranchList, "Value", "Text"), new { @class = "form-control" })
                            @*@Html.DropDownList("BranchId", null, htmlAttributes: new { @class = "form-control" })*@
                            @Html.ValidationMessageFor(model => model.BranchId, "", new { @class = "text-danger" })
                        </div>
                    </div>


                </div>

                <div class="col-lg-6">
                    <div class="form-group form-group-sm">
                        @Html.LabelFor(model => model.HouseNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.HouseNumber, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.HouseNumber, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group form-group-sm">
                        @Html.LabelFor(model => model.StreetName, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.StreetName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.StreetName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group form-group-sm">
                        @Html.LabelFor(model => model.LandMark, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.LandMark, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.LandMark, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group form-group-sm">
                        @Html.LabelFor(model => model.Colony, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.Colony, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Colony, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group form-group-sm">
                        @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group form-group-sm">
                        @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.State, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group form-group-sm">
                        @Html.LabelFor(model => model.ZipCode, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.ZipCode, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ZipCode, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group form-group-sm">
                        @Html.LabelFor(model => model.Mobile, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.Mobile, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Mobile, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group form-group-sm">
                        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2 required" })
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>


                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Save" class="btn btn-success" />
                    </div>
                </div>
            </div>
        }

        <div>
            @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-primary btn-xs" })
        </div>
    </div>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
