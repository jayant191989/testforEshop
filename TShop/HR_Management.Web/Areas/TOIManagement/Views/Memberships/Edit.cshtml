@model HR_Management.Web.ViewModels.MembershipViewModel
@{
    Layout = "~/Areas/TOIManagement/Views/Shared/_Layout.cshtml";
}
<div id="enrollModal" class="modal fade in">
    <div class="modal-dialog">
        <div class="modal-content">
            <div id="enrollModalContent"></div>
        </div>
    </div>
</div>

<div class="box-inner">
    <div class="box-content">
        <h2>Membership Details</h2>
        <hr />
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <p class="text-danger">@TempData["MessageToClientError"]</p>
                <p class="text-success">@TempData["MessageToClientSuccess"]</p>
                <div class="form-group form-group-sm">
                    @Html.LabelFor(model => model.MembershipName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.MembershipName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.MembershipName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group form-group-sm">
                    @Html.LabelFor(model => model.SchemeStartDate, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.SchemeStartDate, "DateWithPicker")
                        @Html.ValidationMessageFor(model => model.SchemeStartDate, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group form-group-sm">
                    @Html.LabelFor(model => model.SchemeEndDate, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.SchemeEndDate, "DateWithPicker")
                        @Html.ValidationMessageFor(model => model.SchemeEndDate, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group form-group-sm">
                    @Html.LabelFor(model => model.TimePeriod, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        @Html.DropDownListFor(model => model.TimePeriod, new SelectList(Model.getAllDaysList, "Value", "Text"), "-Select Time Period-", htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.TimePeriod, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group form-group-sm">
                    @Html.LabelFor(model => model.Discount, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.Discount, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Discount, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group form-group-sm">
                    @Html.LabelFor(model => model.Fees, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.Fees, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Fees, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-offset-2 col-md-10">
                        @{ Html.RenderAction("Index", "EnrollCustomers", new { membershipId = Model.Id });}
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Save" class="btn btn-success" />
                    </div>
                </div>
            </div>
                            }

        <div>
            @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-primary btn-xs" })
        </div>
    </div>
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/myapp/membership/membership.js"></script>
}
