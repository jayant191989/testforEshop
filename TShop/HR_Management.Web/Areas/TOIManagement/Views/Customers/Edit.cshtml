@model HR_Management.Web.ViewModels.CustomerViewModel
@{ 
    Layout = "~/Areas/TOIManagement/Views/Shared/_Layout.cshtml";
}

<div class="box-inner">
    <div class="box-content">
        <h2>Customer Profile</h2>
        <hr />

        @using (Html.BeginForm("Edit", "Customers", FormMethod.Post, new { @class = "form-horizontal", role = "form", enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()
            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.Id)
                <div class="row">
                    <div class="col-md-5">
                        <div class="form-group">
                            @Html.LabelFor(model => model.BranchId, htmlAttributes: new { @class = "control-label col-md-4 required" })
                            <div class="col-md-8">
                                @Html.DropDownListFor(model => model.BranchId, new SelectList(ViewBag.BranchIdName, "Value", "Text"), null, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.BranchId, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.DepartmentID, htmlAttributes: new { @class = "control-label col-md-4 required" })
                            <div class="col-md-8">
                                @Html.DropDownListFor(model => model.DepartmentID, new SelectList(ViewBag.DepartmentName, "Value", "Text"), "Select", new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.DepartmentID, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6">
                        @{if (Model.MainImageName != null)
                        {
                            <div class="img-portfolio">
                                <a href="portfolio-item.html">
                                    @*<img class="img-responsive img-hover" src="http://placehold.it/750x450" alt="">*@
                                    <img class="img-responsive img-portfolio img-hover" width="700" height="450" src="@Url.Content("~/Images/Customers/imagepath/" + Model.MainImageName + "_medium.jpg")" style="height:400px" alt=" " />
                                </a>
                            </div>
                        }
                        else
                        {
                            <div class="img-portfolio">
                                <a href="portfolio-item.html">
                                    <img class="img-responsive img-portfolio img-hover" src="~/Images/no-image-available.jpg" width="700" height="450" alt="">
                                </a>
                            </div>
                        }
                        }
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.OpeningBalance, htmlAttributes: new { @class = "control-label col-md-4 required" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.OpeningBalance, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.OpeningBalance, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.DropDownListFor(model => model.Gender, new SelectList(Model.getAllGenderList, "Value", "Text"), "-Select Gender-", htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.DateOfBirth, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                <div class='input-group datetimepicker6'>
                                    @Html.EditorFor(model => model.DateOfBirth, "EditorDate")
                                    @*<span class="input-group-addon">
                                        <span class="glyphicon glyphicon-calendar"></span>
                                    </span>*@
                                </div>
                                @*<div class='input-group datetimepicker6'>
                                         @Html.EditorFor(model => model.DateOfBirth, new
                                    {
                                        htmlAttributes = new
                                        {

                                            @Value = Model.DateOfBirth.Value.ToString("dd/MM/yyyy"),
                                            @class = "form-control"
                                        }
                                    })
                                         <span class="input-group-addon">
                                             <span class="glyphicon glyphicon-calendar"></span>
                                         </span>
                                     </div>*@
                                @Html.ValidationMessageFor(model => model.DateOfBirth, "", new { @class = "text-danger" })
                                @*@Html.ValidationMessageFor(model => model.DateOfBirth, "", new { @class = "text-danger" })*@
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.FathersName, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.FathersName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.FathersName, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.CustomerType, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.DropDownListFor(model => model.CustomerType, new SelectList(Model.getAllCustomerTypeList, "Value", "Text"), "-Customer Type-", htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.CustomerType, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                <div class="checkbox">
                                    @Html.EditorFor(model => model.Status, new { htmlAttributes = new { @class = "form-control" } })
                                </div>
                            </div>
                        </div>
                    </div>

                </div>
                <hr />
                <div class="row">
                    <div class="col-md-6">
                       
                        <div class="form-group">
                            @Html.LabelFor(model => model.HouseNumber, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.HouseNumber, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.HouseNumber, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.StreetName, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.StreetName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.StreetName, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Colony, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.Colony, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Colony, "", new { @class = "text-danger" })
                            </div>
                        </div>

                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.State, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.ZipCode, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.ZipCode, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.ZipCode, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <hr />
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Mobile, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.Mobile, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Mobile, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.EmpergencyContact, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.EmpergencyContact, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.EmpergencyContact, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">

                        <div class="form-group">
                            @Html.LabelFor(model => model.MedicalHistory, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.MedicalHistory, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.MedicalHistory, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Weight, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.Weight, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Weight, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Height, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.Height, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Height, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <hr />
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Acloholic, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                <div class="checkbox">
                                    @Html.EditorFor(model => model.Acloholic, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Acloholic, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Smoke, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                <div class="checkbox">
                                    @Html.EditorFor(model => model.Smoke, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Smoke, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.PersenalTrainer, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                <div class="checkbox">
                                    @Html.EditorFor(model => model.PersenalTrainer, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.PersenalTrainer, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.GymJoinedBefore, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                <div class="checkbox">
                                    @Html.EditorFor(model => model.GymJoinedBefore, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.GymJoinedBefore, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="Save" class="btn btn-success" />
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.DateOfJoining, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.DateOfJoining, "DateWithPicker")
                                @Html.ValidationMessageFor(model => model.DateOfJoining, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.TrainingGoal, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.TrainingGoal, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.TrainingGoal, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.GymReference, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.GymReference, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.GymReference, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(m => m.MainImageName, new { @class = "col-md-4 control-label" })
                            <div class="col-md-8">
                                @*<input type="file" name="OrignalImageNameFile"  class="input-files" />*@
                                @Html.TextBoxFor(m => m.MainImageName, new { @class = "col-md-4 control-label" })
                                @Html.TextBoxFor(m => m.ImageExtention, new { @class = "col-md-4 control-label" })
                                @Html.TextBoxFor(m => m.MainImageNameFile, new { type = "file", @class = "input-file" })
                                @Html.ValidationMessageFor(m => m.MainImageNameFile, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>

            </div>
        }

        <div>
            @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-primary btn-xs" })
        </div>
    </div>
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
