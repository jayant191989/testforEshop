@model IEnumerable<HR_Management.Web.ViewModels.EmployeeSalaryByViewModel>

<div class="box-inner">
    <div class="box-content">
        <h2>Salary By Employee</h2>
        <hr />
        <p id="MessageToClient" class="text-danger"></p>
        <p class="text-danger">@TempData["MessageToClient"]</p>

        <div class="table-responsive">
            <table class="table table-striped table-hover table-bordered">
                <thead>
                    <tr>
                        <th class="col-md-3 small">Full Name</th>
                        <th class="small">1</th>
                        <th class="small">2</th>
                        <th class="small">3</th>
                        <th class="small">4</th>
                        <th class="small">5</th>
                        <th class="small">6</th>
                        <th class="small">7</th>
                        <th class="small">8</th>
                        <th class="small">9</th>
                        <th class="small">10</th>
                        <th class="small">11</th>
                        <th class="small">12</th>
                        <th class="small">13</th>
                        <th class="small">14</th>
                        <th class="small">15</th>
                        <th class="small">16</th>
                        <th class="small">17</th>
                        <th class="small">18</th>
                        <th class="small">19</th>
                        <th class="small">20</th>
                        <th class="small">21</th>
                        <th class="small">22</th>
                        <th class="small">23</th>
                        <th class="small">24</th>
                        <th class="small">25</th>
                        <th class="small">26</th>
                        <th class="small">27</th>
                        <th class="small">28</th>
                        <th class="small">29</th>
                        <th class="small">30</th>
                        <th class="small">31</th>
                        <th>Total</th>
                        <th>Recipt</th>
                    </tr>
                </thead>
                @{
                    int countdown = 0;
                }
                @foreach (var employee in Model)
                {
                    countdown = countdown + 1;
                    if (countdown > 1)
                    { }
                    else
                    {
                        if (employee.Month.Value == 1)
                        {
                @Html.DisplayFor(m => employee.Month)
                        }
                        else if (employee.Month == 2)
                        {
                @Html.Display("Feb")
                        }
                        else if (employee.Month == 3)
                        {
                @Html.Display("March")
                        }
                        else if (employee.Month == 4)
                        {
                @Html.Display("April")
                        }
                        else if (employee.Month == 5)
                        {
                @Html.Display("May")
                        }
                        else if (employee.Month == 6)
                        {
                @Html.Display("June")
                        }
                        else if (employee.Month == 7)
                        {
                @Html.DisplayText("July")
                        }
                        else if (employee.Month == 8)
                        {
                @Html.Display("August")
                        }
                        else if (employee.Month == 9)
                        {
                @Html.Display("September")
                        }
                        else if (employee.Month == 10)
                        {
                <tr><content> <h4>October</h4></content></tr>
                        }
                        else if (employee.Month == 11)
                        {
                @Html.Display("November")
                        }
                        else if (employee.Month == 12)
                        {
                @Html.Display("December")
                        }
                    }

                <tr>
                    <td>@employee.FullName</td>
                    @{
                    int counter = 1;
                    foreach (var item in employee.SalaryByEmployeeViewModel)
                    {
                        int nullValueCounter = item.Date.Value.Day - counter;
                        if (item.Date.Value.Day == counter)
                        {
                            switch (item.Date.Value.Day)
                            {
                                case 1:
                        <td>@Html.DisplayFor(modelItem => item.AttendenceType, "AttendenceTypeFormat")</td>
                                    break;
                                case 2:
                        <td>@Html.DisplayFor(modelItem => item.AttendenceType, "AttendenceTypeFormat")</td>
                                    break;
                                case 3:
                        <td>@Html.DisplayFor(modelItem => item.AttendenceType, "AttendenceTypeFormat")</td>
                                    break;
                                case 4:
                        <td>@Html.DisplayFor(modelItem => item.AttendenceType, "AttendenceTypeFormat")</td>
                                    break;
                                case 5:
                        <td>@Html.DisplayFor(modelItem => item.AttendenceType, "AttendenceTypeFormat")</td>
                                    break;
                                case 6:
                        <td>@Html.DisplayFor(modelItem => item.AttendenceType, "AttendenceTypeFormat")</td>
                                    break;
                                case 7:
                        <td>@Html.DisplayFor(modelItem => item.AttendenceType, "AttendenceTypeFormat")</td>
                                    break;
                                case 8:
                        <td>@Html.DisplayFor(modelItem => item.AttendenceType, "AttendenceTypeFormat")</td>
                                    break;
                                case 9:
                        <td>@Html.DisplayFor(modelItem => item.AttendenceType, "AttendenceTypeFormat")</td>
                                    break;
                                case 10:
                        <td>@Html.DisplayFor(modelItem => item.AttendenceType, "AttendenceTypeFormat")</td>
                                    break;
                                case 11:
                        <td>@Html.DisplayFor(modelItem => item.AttendenceType, "AttendenceTypeFormat")</td>
                                    break;
                                case 12:
                        <td>@Html.DisplayFor(modelItem => item.AttendenceType, "AttendenceTypeFormat")</td>
                                    break;
                                case 13:
                        <td>@Html.DisplayFor(modelItem => item.AttendenceType, "AttendenceTypeFormat")</td>
                                    break;
                                case 14:
                        <td>@Html.DisplayFor(modelItem => item.AttendenceType, "AttendenceTypeFormat")</td>
                                    break;
                                case 15:
                        <td>@Html.DisplayFor(modelItem => item.AttendenceType, "AttendenceTypeFormat")</td>
                                    break;
                                case 16:
                        <td>@Html.DisplayFor(modelItem => item.AttendenceType, "AttendenceTypeFormat")</td>
                                    break;
                                case 17:
                        <td>@Html.DisplayFor(modelItem => item.AttendenceType, "AttendenceTypeFormat")</td>
                                    break;
                                case 18:
                        <td>@Html.DisplayFor(modelItem => item.AttendenceType, "AttendenceTypeFormat")</td>
                                    break;
                                case 19:
                        <td>@Html.DisplayFor(modelItem => item.AttendenceType, "AttendenceTypeFormat")</td>
                                    break;
                                case 20:
                        <td>@Html.DisplayFor(modelItem => item.AttendenceType, "AttendenceTypeFormat")</td>
                                    break;
                                default:
                        <td>@string.Empty</td>
                                    break;
                            }
                        }
                        else
                        {
                            for (int i = 0; nullValueCounter > i; i++)
                            {
                        <td>@string.Empty</td>
                            }
                        <td>@Html.DisplayFor(modelItem => item.AttendenceType, "AttendenceTypeFormat")</td>
                            counter = item.Date.Value.Day;
                        }
                        counter = counter + 1;
                    }

                    int count = counter - 1;
                    int NullTillTotal = 31 - count;
                    for (int i = count; i < 32; i++)
                    {
                        if (i < 31)
                        {
                        <td>@string.Empty</td>
                        }
                        else
                        {
                        <td><text>Rs. </text>@Html.DisplayFor(modelItem => employee.Total)</td>
                        <td><input type="button" class="btn btn-success btn-xs" value="Recipt" /></td>
                        }

                    }
                    }
                </tr>
                }

            </table>
        </div>
        <br />
        <div>
            @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-primary btn-xs" })
        </div>
    </div>

</div>
