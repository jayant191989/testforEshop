@model HR_Management.Web.ViewModels.ProductViewModel

@{
    ViewBag.Title = "Edit";
    Layout = "~/Areas/TOIManagement/Views/Shared/_Layout.cshtml";
}

<div class="box-inner">
    <div class="box-content">
        <h2>Product Details</h2>
        <hr />
        <div class="row">
            <div class="col-lg-12">
                <ul class="nav nav-tabs">

                    <li class="active"><a data-toggle="tab" href="#home">General Detail</a></li>
                    @*<li><a data-toggle="tab" href="#category">Categories</a></li>*@
                    <li><a data-toggle="tab" href="#menu1">Attributes</a></li>
                    <li><a data-toggle="tab" href="#menu2">Details</a></li>
                    <li><a data-toggle="tab" href="#menu3">Specifications</a></li>
                </ul>

                <div class="ibox">
                    <div class="ibox-content">
                        @using (Html.BeginForm("Edit", "Products", FormMethod.Post, new { id = "form", @class = "wizard-big", enctype = "multipart/form-data" }))
                        {
                            @*<form id="form" action="@Url.Action("Create", "Products")" class="wizard-big">*@
                            <div class="tab-content">
                                <div id="home" class="tab-pane fade in active">
                                    @Html.AntiForgeryToken()
                                    @Html.HiddenFor(x => Model.Id)
                                    @Html.HiddenFor(x => Model.ProductCategoryId)
                                    @Html.HiddenFor(x => Model.TabIndex)
                                    <fieldset>
                                        <h2>Product Information</h2>
                                        <div class="row">
                                            <div class="form-horizontal">
                                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                                <div class="col-md-6">
                                                    <div class="form-group">
                                                        @Html.LabelFor(model => model.Code, htmlAttributes: new { @class = "control-label col-md-4" })
                                                        <div class="col-md-6">
                                                            @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control" } })
                                                            @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
                                                        </div>
                                                    </div>
                                                    <div class="form-group">
                                                        @Html.LabelFor(model => model.ModelNumber, htmlAttributes: new { @class = "control-label col-md-4" })
                                                        <div class="col-md-6">
                                                            @Html.EditorFor(model => model.ModelNumber, new { htmlAttributes = new { @class = "form-control" } })
                                                            @Html.ValidationMessageFor(model => model.ModelNumber, "", new { @class = "text-danger" })
                                                        </div>
                                                    </div>
                                                    <div class="form-group">
                                                        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-4" })
                                                        <div class="col-md-6">
                                                            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                                                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                                                        </div>
                                                    </div>

                                                    <div class="form-group">
                                                        @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-4" })
                                                        <div class="col-md-6">
                                                            @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                                                            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                                                        </div>
                                                    </div>

                                                    <div class="form-group">
                                                        @Html.LabelFor(model => model.DiscountPerUnitInPercent, htmlAttributes: new { @class = "control-label col-md-4" })
                                                        <div class="col-md-6">
                                                            @Html.EditorFor(model => model.DiscountPerUnitInPercent, new { htmlAttributes = new { @class = "form-control" } })
                                                            @Html.ValidationMessageFor(model => model.DiscountPerUnitInPercent, "", new { @class = "text-danger" })
                                                        </div>
                                                    </div>

                                                    <div class="form-group">
                                                        @Html.LabelFor(model => model.SalePrice, htmlAttributes: new { @class = "control-label col-md-4" })
                                                        <div class="col-md-6">
                                                            @Html.EditorFor(model => model.SalePrice, new { htmlAttributes = new { @class = "form-control" } })
                                                            @Html.ValidationMessageFor(model => model.SalePrice, "", new { @class = "text-danger" })
                                                        </div>
                                                    </div>

                                                    <div id="ctrlImageUrl" class="form-group">
                                                        <label class="control-label col-md-4">Image Url</label>
                                                        <div class="col-md-6">
                                                            @Html.TextBoxFor(m => m.ThumbMainImageName, new { @class = "col-md-4 control-label" })
                                                            @Html.TextBoxFor(model => model.MainImageNameFile, new { data_cmsmodulecontrolid = "", type = "file", id = "txtImageUrl", placeholder = "Enter Title", @class = "form-control" })
                                                            @*<span>@Html.ValidationMessageFor(model => model.MainImageNameFile, "", new { @class = "text-danger" })</span>*@
                                                            <div class="col-md-offset-4">
                                                                @if (Model.ThumbMainImageName != null)
                                                                {
                                                                    <img id="blah" class="img-responsive img-portfolio img-hover" style="height: 100px; width: 100px" src="@Url.Content("~/Images/Upload/" + Model.CategoryName +"/" + Model.ThumbMainImageName + "_small.jpg")" />
                                                                }
                                                                else
                                                                {
                                                                    <img id="blah" src="~/Images/no-image.png" style="height: 100px; width: 100px;" />
                                                                }
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>

                                                <div class="col-md-6">
                                                    <div class="form-group">
                                                        @Html.LabelFor(model => model.IsAvailableForSale, htmlAttributes: new { @class = "control-label col-md-4" })
                                                        <div class="col-md-6">
                                                            @Html.CheckBoxFor(m => m.IsAvailableForSale, new { @class = "checkbox" })
                                                        </div>

                                                    </div>

                                                    <div class="form-group">
                                                        @Html.LabelFor(model => model.ShowOnWebsite, htmlAttributes: new { @class = "control-label col-md-4" })
                                                        <div class="col-md-6">
                                                            @Html.CheckBoxFor(m => m.ShowOnWebsite, new { @class = "checkbox" })
                                                        </div>
                                                    </div>

                                                    <div class="form-group">
                                                        @Html.LabelFor(model => model.Is_BestSeller, htmlAttributes: new { @class = "control-label col-md-4" })
                                                        <div class="col-md-6">
                                                            @Html.CheckBoxFor(m => m.Is_BestSeller, new { @class = "checkbox" })
                                                        </div>
                                                    </div>

                                                    <div class="form-group">
                                                        @Html.LabelFor(model => model.Is_FeaturedProduct, htmlAttributes: new { @class = "control-label col-md-4" })
                                                        <div class="col-md-6">
                                                            @Html.CheckBoxFor(m => m.Is_FeaturedProduct, new { @class = "checkbox" })
                                                        </div>
                                                    </div>
                                                    <div class="form-group">
                                                        @Html.LabelFor(model => model.Is_NewArrival, htmlAttributes: new { @class = "control-label col-md-4" })
                                                        <div class="col-md-6">
                                                            @Html.CheckBoxFor(m => m.Is_NewArrival, new { @class = "checkbox" })
                                                        </div>
                                                    </div>

                                                </div>
                                            </div>
                                        </div>

                                    </fieldset>
                                </div>
                                @*<div id="category" class="tab-pane fade">
                                        <fieldset>
                                            <h2>category</h2>
                                            @foreach (var category in Model.CategoryTags)
                                            {
                                                <ul>
                                                    <li class="checkbox">
                                                        <input type="checkbox" checked="@category.IsChecked" value=@category.Name name=CategorySelectedOnView>
                                                        @category.Name
                                                    </li>
                                                </ul>
                                            }
                                        </fieldset>
                                    </div>*@
                                <div id="menu1" class="tab-pane fade">
                                    <fieldset>
                                        <h2>Product Properties </h2>
                                        <div class="row">
                                            <div class="col-lg-3">
                                                <div class="ibox float-e-margins">
                                                    <div class="ibox-content mailbox-content">
                                                        <div class="container">
                                                            <div style="float:left;padding:5px">
                                                                @{
                                                                    foreach (var tag in Model.AttributesTags)
                                                                    {
                                                                        <div style="float:left;padding:5px">
                                                                            @*@if (tag.IsChecked == true)
                                                                                {
                                                                                    <input type="checkbox" data-toggle="toggle" checked="@tag.IsChecked" class="toggle-on" value=@tag.Name name="AttributeSelectedOnView" data-size="mini">
                                                                                }
                                                                                else
                                                                                {
                                                                                    <input type="checkbox" data-toggle="toggle" checked="@tag.IsChecked" value=@tag.Name name="AttributeSelectedOnView" data-size="mini" class="inline">
                                                                                }*@
                                                                            <label>@tag.Name</label>
                                                                            @foreach (var option in tag.OptionsTags)
                                                                            {
                                                                                <ul>
                                                                                    <li class="checkbox">
                                                                                        <input type="checkbox" checked="@option.IsChecked" value=@option.Id name=OptionsSelectedOnView>
                                                                                        @option.Name
                                                                                    </li>
                                                                                </ul>
                                                                            }
                                                                        </div>
                                                                    }
                                                                }
                                                            </div>
                                                            <div class="clearfix"></div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </fieldset>
                                </div>
                                <div id="menu2" class="tab-pane fade">
                                    <fieldset>
                                        <div class="compose-editor" style="margin-top:10px;">
                                            @*<textarea id="text-editor" class="ckeditor" placeholder="Enter text ..." rows="25"></textarea>*@
                                            @*@Html.TextAreaFor(model => model.Discription, 25, 25, new { @class = "ckeditor", id = "text-editor" })*@
                                            @Html.TextAreaFor(model => model.Discription, new { @class = "summernote"})
                                        </div>

                                    </fieldset>
                                </div>
                                <div id="menu3" class="tab-pane fade">
                                    <fieldset>
                                        <div class="compose-editor" style="margin-top:10px;">
                                            @*<textarea id="text-editor" class="ckeditor" placeholder="Enter text ..." rows="25"></textarea>*@
                                            @*@Html.TextAreaFor(model => model.Specifications, 50, 50, new { @class = "ckeditor", id = "editor2" })*@
                                            @Html.TextAreaFor(model => model.Specifications,  new { @class = "summernote" })
                                        </div>
                                    </fieldset>
                                </div>

                            </div>
                            <button id="Submit" class="btn btn-primary pull-right">Submit</button>

                                                                    }
                    </div>
                </div>
            </div>
        </div>
        <div>
            @Html.ActionLink("Back to List", "Index", "Products", new { @class = "btn btn-primary btn-xs" })
        </div>
    </div>
</div>

@section Scripts {
    <script>
    $('.summernote').summernote({
        height: 400,   //set editable area's height
        codemirror: { // codemirror options
            theme: 'monokai'
        }
    });

    function readURL(input) {
        if (input.files && input.files[0]) {
            var reader = new FileReader();

            reader.onload = function (e) {
                $('#blah').attr('src', e.target.result);
            }

            reader.readAsDataURL(input.files[0]);
        }
    }

    $(document).ready(function () {
        $("#txtImageUrl")
            .change(function () {

                var validExtensions = ['jpg', 'png', 'jpeg']; //array of valid extensions
                var fileName = $("#txtImageUrl").val();
                var fileNameExt = fileName.substr(fileName.lastIndexOf('.') + 1);

                var size = parseFloat($("#txtImageUrl")[0].files[0].size / 1024).toFixed(2);
                if ($.inArray(fileNameExt, validExtensions) === -1) {
                    showNotification(" Invalid file type,Please upload a .jpg,.png,jpeg file !", "failed");
                    $('#blah').attr('src', "/Images/no-image.png");
                    $("#txtImageUrl").val("");
                    return false;
                }
                if (size >= 1024) {
                    showNotification('Upload file limti is 1 mb ', "failed");
                    $("#txtImageUrl").val("");
                    return false;
                }
                readURL(this);
                return false;
            });
    })

    $('input:checkbox').change(function () {
        if ($(this).is(':checked'))
            $(this).addClass('selected');
        else
            $(this).removeClass('selected')
    });
    </script>
}
