@model HR_Management.Web.ViewModels.CustomerViewModel

@using (Html.BeginForm("_Create", "Customers", FormMethod.Post, new { id = "createcustomer" }))
{
    @Html.AntiForgeryToken()
    <div class="modal-header">
        <a class="close" data-dismiss="modal" aria-hidden="True">&times;</a>
        <h4 class="modal-title">Create Quick Customer</h4>
    </div>
    <div class="modal-body">
        <div class="form-horizontal">
            <p id="MessageToClient" class="text-danger"></p>
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="form-group">
                @*@Html.LabelFor(model => model.CustomerType, htmlAttributes: new { @class = "control-label col-md-4 required" })*@
                <label class="control-label col-md-4">Type</label>
                <div class="col-md-8">
                    <label class="radio-inline"><input type="radio" name="CustomerType" value="1">Company</label>
                    <label class="radio-inline"><input type="radio" name="CustomerType" value="2">Customer</label>
                    <label class="radio-inline"><input type="radio" name="CustomerType" value="3">Employe</label>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.BranchId, htmlAttributes: new { @class = "control-label col-md-4 required" })
                <div class="col-md-6">
                    @Html.DropDownListFor(model => model.BranchId, new SelectList(ViewBag.BranchId, "Value", "Text"), "-Select Branch-", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.BranchId, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.DepartmentID, htmlAttributes: new { @class = "control-label col-md-4 required" })
                <div class="col-md-6">
                    @Html.DropDownListFor(model => model.DepartmentID, new SelectList(ViewBag.DepartmentID, "Value", "Text"), "-Select Department-", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.DepartmentID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-4 required" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.DropDownListFor(model => model.Gender, new SelectList(Model.getAllGenderList, "Value", "Text"), "-Select Gender-", htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-4 required" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Mobile, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.Mobile, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Mobile, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.OpeningBalance, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.OpeningBalance, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.OpeningBalance, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>
    <div class="modal-footer">
        <a class="btn btn-default" data-dismiss="modal">Cancel</a>
        <input class="btn btn-primary" type="submit" value="Add" />
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}






